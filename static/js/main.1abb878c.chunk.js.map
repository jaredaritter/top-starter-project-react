{"version":3,"sources":["components/Task.js","components/Edit.js","components/Overview.js","App.js","index.js"],"names":["Task","props","id","item","i","task","className","onClick","handleEdit","handleDelete","Edit","handleSubmitClick","e","temp","state","handleEditSubmit","handleChange","bind","this","setState","target","value","onSubmit","type","onChange","React","Component","Overview","listItems","list","map","editting","key","handleEditChange","App","handleSubmit","nanoid","preventDefault","parentId","parentNode","newList","filter","a","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1abb878c.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Task(props) {\n  return (\n    <div id={props.item.id}>\n      {props.i + 1}) {props.item.task}\n      {'  '}\n      <i className=\"fas fa-plus-circle fa-xs\" onClick={props.handleEdit}></i>\n      <i className=\"fas fa-minus-circle fa-xs\" onClick={props.handleDelete}></i>\n    </div>\n  );\n}\n\nexport default Task;\n","import React from 'react';\n\nclass Edit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      temp: this.props.item.task,\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      temp: e.target.value,\n    });\n  }\n\n  handleSubmitClick = (e) => {\n    const temp = this.state.temp;\n    this.props.handleEditSubmit(e, temp);\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmitClick} id={this.props.item.id}>\n        {this.props.i + 1}){'  '}\n        <input\n          type=\"text\"\n          value={this.state.temp}\n          onChange={this.handleChange}\n        />\n        <button type=\"submit\" className=\"edit-button\">\n          <i className=\"fas fa-plus-circle fa-lg\"></i>\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Edit;\n\n// MULLINGS AND THOUGHTS\n// NEED TO PASS I TO KEEP NUMBER (COMPLETED)\n// NEED TO PASS ID TO PASS NEW INFORMATION TO APP STATE (COMPLETED)\n// MIGHT BE ABLE TO REUSE OTHER SUBMIT BUTTON? (SEEMS UNLIKELY)\n// DO I NEED AN ONCHANGE? (YES)\n// CAN TIE TO LOCAL STATE IF NEEDED FOR TEMP (LOOKING LIKE THE NEXT STEP)\n// HOW TO TOGGLE FOR EDIT? CAN ADD EDITING BOOLEAN TO OBJECT THAT IS SET ON EDIT CLICK CAUSING IT TO RERENDER WITH EDIT COMPONENT IN IT'S PLACE. (COMPLETED)\n// GOT WEIRD WITH PASSING VALUES DIRECTLY THROUGH ONCLICK BUT WORKS WELL WITH OTHER FUNCTIONS (NEED TO SEE WHY EXACTLY IT PREFERS ARROW FUNCTIONS) THAT THEN CALL ORIGINAL PARENT FUNCTION WITH A PASSED VALUE.\n","import React from 'react';\nimport Task from './Task';\nimport Edit from './Edit';\n\n// BUILDS UNORDERED LIST FROM PASSED LIST ARRAY\nfunction Overview(props) {\n  const listItems = props.list.map((item, i) => {\n    if (item.editting) {\n      return (\n        <Edit\n          key={item.id}\n          item={item}\n          i={i}\n          handleEditSubmit={props.handleEditSubmit}\n          handleEditChange={props.handleEditChange}\n        />\n      );\n    } else {\n      return (\n        <Task\n          key={item.id}\n          item={item}\n          i={i}\n          handleEdit={props.handleEdit}\n          handleDelete={props.handleDelete}\n        />\n      );\n    }\n  });\n  return <ul>{listItems}</ul>;\n}\n\nexport default Overview;\n","import React from 'react';\nimport { nanoid } from 'nanoid';\nimport Overview from './components/Overview';\nimport './App.css';\n\n// TODO\n// CHANGE EDIT TO USING A FORM SO THAT THE ENTER BUTTON WORKS CORRECTLY FOR SUBMISSION (COMPLETED)\n// IF INPUT IS BLANK THEN DO NOT SUBMIT ANYTHING (COMPLETED)\n// MODIFY INPUT BOX AND FONT SIZE FOR IMPROVED UI AND AESTHETICS (COMPLETED)\n// REMOVE TEMP FROM INDIVIDUAL LIST ITEMS, NO LONGER NEEDED (COMPLETED)\n// HOST ON GHPAGES\n// UPDATE README WITH EXPLANATION AND RESOURCES\n// EXTRACT FORM FROM APP?\n// REMOVE TEST ITEM FROM STATE.LIST\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      temp: '',\n      list: [{ id: '31245', task: 'Test', editting: false }],\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleEditSubmit = this.handleEditSubmit.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // -------------------------------------------------------\n  // APP FORM LOGIC\n  // -------------------------------------------------------\n  handleChange(e) {\n    this.setState({\n      temp: e.target.value,\n    });\n  }\n\n  handleSubmit(e) {\n    if (!this.state.temp) {\n      e.preventDefault();\n      return;\n    }\n    const id = nanoid(10);\n    this.setState({\n      list: [\n        ...this.state.list,\n        { id: id, task: this.state.temp, editting: false },\n      ],\n      temp: '',\n    });\n    e.preventDefault();\n  }\n\n  // ---------------------------------------------------------\n  // CHILD COMPONENT HANDLER LOGIC\n  // ---------------------------------------------------------\n  handleDelete(e) {\n    // IS USING PARENT ID THE BEST WAY TO TARGET WAY TO REMOVE?\n    const parentId = e.target.parentNode.id;\n    const newList = this.state.list.filter((a) => {\n      if (a.id !== parentId) return a;\n    });\n    this.setState({\n      list: newList,\n    });\n  }\n\n  handleEdit(e) {\n    const parentId = e.target.parentNode.id;\n    const newList = this.state.list.filter((a) => {\n      if (a.id === parentId) {\n        a.editting = true;\n      }\n      return a;\n    });\n    this.setState({\n      list: newList,\n    });\n  }\n\n  handleEditSubmit(e, temp) {\n    const newList = this.state.list.filter((a) => {\n      if (a.id === e.target.id) {\n        a.task = temp;\n        a.editting = false;\n      }\n      return a;\n    });\n    this.setState({\n      list: newList,\n    });\n    e.preventDefault(); // NEEDED IF USING FORM IN EDIT COMPONENT\n  }\n\n  // ---------------------------------------------------------\n  // RENDER\n  // ---------------------------------------------------------\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Tiny List</h1>\n        {/* CONTROLLED COMPONENT USED FOR REACT FORMS */}\n        <form className=\"app-form\" onSubmit={this.handleSubmit}>\n          <input\n            className=\"input\"\n            type=\"text\"\n            value={this.state.temp}\n            onChange={this.handleChange}\n          />\n          <input className=\"submit\" type=\"submit\" value=\"Submit\" />\n        </form>\n        <Overview\n          list={this.state.list}\n          handleDelete={this.handleDelete}\n          handleEdit={this.handleEdit}\n          handleEditSubmit={this.handleEditSubmit}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// OLD CODE AND FUNCTIONS THAT MAY STILL BE USEFUL\n\n// PRE-FORM VERSION\n// handleEditSubmit(e, temp) {\n//   const parentId = e.target.parentNode.id;\n//   const newList = this.state.list.filter((a) => {\n//     if (a.id === parentId) {\n//       a.task = temp;\n//       a.editting = false;\n//     }\n//     return a;\n//   });\n//   this.setState({\n//     list: newList,\n//   });\n//   e.preventDefault(); // NEEDED IF USING FORM IN EDIT COMPONENT\n// }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}